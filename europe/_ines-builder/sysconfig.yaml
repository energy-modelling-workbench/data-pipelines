# Commodities DB
commodities:
  entities:
    commodity: node 
  parameters:
    commodity: 
      node:
        co2_content: [co2_content,1.0]
        commodity_price: [commodity_price,1.0]

# Power Sector DB including Transmission in Target Resolution
power_sector:
  entities:
    technology:
      unit:
        - [[1]]
    commodity__to_technology:
      node__to_unit: 
        - [[1],[2]]
    technology__to_commodity:
      unit__to_node: 
        - [[1],[2]]
    commodity__to_technology__to_commodity: 
      unit_flow__unit_flow:
        - [[2],[3],[1],[2]]
    storage:
      node: 
        - [[1]]
    storage_connection:
      link: 
        - [[1,2]]
      node__link__node: 
        - [[1],[1,2],[2]]
        - [[2],[1,2],[1]]
  parameters:
    user:
      technology:
        unit:
          investment_method: [technology,investment_method,[[1]],[[1]]]
      storage:
        node:
          storage_investment_method: [storage,investment_method,[[1]],[[1]]]
      storage_connection:
        link:
          investment_method: [storage,investment_method,[[1]],[[1,2]]]
    default:
      technology:
        unit: 
          - [retirement_method,economic_retirement,[[1]]]
      technology__to_commodity:
        unit__to_node: 
          - [capacity,1.0,[[1],[2]]]
      storage:
        node:
          - [node_type,storage,[[1]]]
          - [storage_limit_method,upper_limit,[[1]]]
          - [storage_retirement_method,economic_retirement,[[1]]]   
      storage_connection:
        link:
          - [capacity,1.0,[[1,2]]]
          - [retirement_method,economic_retirement,[[1,2]]]   
    fixed:
      technology__to_commodity:
        unit__to_node:
          investment_cost: [investment_cost,1.0,[[1],[2]]]
          fixed_cost: [fixed_cost,1.0,[[1],[2]]]
          operational_cost: [other_operational_cost,1.0,[[1],[2]]]
      commodity__to_technology__to_commodity:
        unit_flow__unit_flow:
          conversion_rate: [equality_ratio,1.0,[[2],[3],[1],[2]]]
          CO2_captured: [equality_ratio,1.0,[[2],[3],[1],[2]]]
      storage:
        node:
          investment_cost: [storage_investment_cost,1.0,[[1]]]
      storage_connection:
        link:
          investment_cost: [investment_cost,1.0,[[1,2]]]
          fixed_cost: [fixed_cost,1.0,[[1,2]]]
          operational_cost: [operational_cost,1.0,[[1,2]]]
        node__link__node:
          efficiency_in: [efficiency,1.0,[[2],[1,2],[1]]]
          efficiency_out: [efficiency,1.0,[[1],[1,2],[2]]]
    dynamic:
      technology__region:
        unit:
          units_existing: [units_existing,[[1]],[area,{}],0.0,PECD1]
      storage__region:
        node:
          storages_existing: [storages_existing,[[1]],[area,{}],0.0,PECD1]
      storage_connection__region:
        link:
          links_existing: [links_existing,[[1,2]],[area,{}],0.0,PECD1]

# Variable Renewable Energy
vre:
  entities:
    technology:
      unit:
        - [[1]]
    technology__to_commodity:
      unit__to_node: 
        - [[1],[2]]
    technology_type:
      set: 
        - [[1]]
    technology_type__technology:
      set__unit: 
        - [[1],[2]]
  parameters:
    user:
      technology:
        unit:
          investment_method: [technology,investment_method,[[1]],[[1]]]
    default:
      technology:
        unit: 
          - [retirement_method,economic_retirement,[[1]]]
      technology__to_commodity:
        unit__to_node: 
          - [capacity,1.0,[[1],[2]]]
    fixed:
      technology__to_commodity:
        unit__to_node:
          investment_cost: [investment_cost,1.0,[[1],[2]]]
          fixed_cost: [fixed_cost,1.0,[[1],[2]]]
          operational_cost: [other_operational_cost,1.0,[[1],[2]]]
    dynamic:
      technology__region:
        unit:
          units_existing: [units_existing,[[1]],[area,{}],0.0,{"on": PECD2, "off": OFF3}]
      technology__to_commodity__region:
        unit__to_node:
          profile_limit_upper: [profile_limit_upper,[[1],[2]],[potential,{existing: capacity}],null,{"on": PECD2, "off": OFF3}]
      technology_type__region:
        set:
          potential: [invest_max_total,[[1]],[area,{}],0.0,{"on": PECD2, "off": OFF3}]
# power transmission map
power_transmission:
  entities:
    region__transmission__commodity__region:
      link:
        - [[1,3,4]]
      node__link__node:
        - [[3,1],[1,3,4],[3,4]]
  parameters:
    user: null
    default:
      region__transmission__commodity__region:
        link: 
          - [retirement_method,economic_retirement,[[1,3,4]]]
          - [investment_method,cumulative_limits,[[1,3,4]]]
        node__link__node:
          - [capacity,1.0,[[3,1],[1,3,4],[3,4]]]
          - [efficiency,1.0,[[3,1],[1,3,4],[3,4]]]
    fixed:
      region__transmission__commodity__region:
        link:
          investment_cost: [investment_cost,1.0,[[1,3,4]]]
          links_existing: [links_existing,1.0,[[1,3,4]]]
          links_potentials: [links_max_cumulative,1.0,[[1,3,4]]]



# CO2 node is hard-coded
  # unit_flow__unit_flow:
  #  co2_capture: [equality_ratio,1.0,[[[1],[2]],[[1],["CO2"]]]] 
